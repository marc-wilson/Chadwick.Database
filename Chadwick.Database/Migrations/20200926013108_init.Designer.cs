// <auto-generated />
using System;
using Chadwick.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chadwick.Database.Migrations
{
    [DbContext(typeof(ChadwickDbContext))]
    [Migration("20200926013108_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chadwick.Database.Models.AllStarFull", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameNumber")
                        .HasColumnType("int");

                    b.Property<int?>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StartingPosition")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AllStarFull");
                });

            modelBuilder.Entity("Chadwick.Database.Models.Appearance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GamesAsCatcher")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsCenterFielder")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsDesignatedHitter")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsFirstBaseman")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsLeftFielder")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsOutfielder")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsPinchHitter")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsPinchRunner")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsPitcher")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsRightFielder")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsSecondBaseman")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsShortStop")
                        .HasColumnType("int");

                    b.Property<int?>("GamesAsThirdBaseman")
                        .HasColumnType("int");

                    b.Property<int?>("GamesBatted")
                        .HasColumnType("int");

                    b.Property<int?>("GamesDefense")
                        .HasColumnType("int");

                    b.Property<int?>("GamesStarted")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalGamesPlayed")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Appearances");
                });

            modelBuilder.Entity("Chadwick.Database.Models.AwardsManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AwardsManagers");
                });

            modelBuilder.Entity("Chadwick.Database.Models.AwardsPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AwardsPlayers");
                });

            modelBuilder.Entity("Chadwick.Database.Models.AwardsShareManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointsMax")
                        .HasColumnType("int");

                    b.Property<int?>("PointsWon")
                        .HasColumnType("int");

                    b.Property<int?>("VotesFirst")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AwardsShareManagers");
                });

            modelBuilder.Entity("Chadwick.Database.Models.AwardsSharePlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointsMax")
                        .HasColumnType("int");

                    b.Property<decimal?>("PointsWon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VotesFirst")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AwardsSharePlayers");
                });

            modelBuilder.Entity("Chadwick.Database.Models.Batting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AtBats")
                        .HasColumnType("int");

                    b.Property<int?>("BaseOnBalls")
                        .HasColumnType("int");

                    b.Property<int?>("CaughtStealing")
                        .HasColumnType("int");

                    b.Property<int?>("Doubles")
                        .HasColumnType("int");

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<int?>("GroundedIntoDoublePlays")
                        .HasColumnType("int");

                    b.Property<int?>("HitByPitch")
                        .HasColumnType("int");

                    b.Property<int?>("Hits")
                        .HasColumnType("int");

                    b.Property<int?>("HomeRuns")
                        .HasColumnType("int");

                    b.Property<int?>("IntentionalWalks")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Runs")
                        .HasColumnType("int");

                    b.Property<int?>("RunsBattedIn")
                        .HasColumnType("int");

                    b.Property<int?>("SacrificeFlies")
                        .HasColumnType("int");

                    b.Property<int?>("SacrificeHits")
                        .HasColumnType("int");

                    b.Property<int?>("Stint")
                        .HasColumnType("int");

                    b.Property<int?>("StolenBases")
                        .HasColumnType("int");

                    b.Property<int?>("Strikeouts")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Triples")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Batting");
                });

            modelBuilder.Entity("Chadwick.Database.Models.BattingPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AtBats")
                        .HasColumnType("int");

                    b.Property<int?>("BaseOnBalls")
                        .HasColumnType("int");

                    b.Property<int?>("CaughtStealing")
                        .HasColumnType("int");

                    b.Property<int?>("Doubles")
                        .HasColumnType("int");

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<int?>("GroundedIntoDoublePlays")
                        .HasColumnType("int");

                    b.Property<int?>("HitByPitch")
                        .HasColumnType("int");

                    b.Property<int?>("Hits")
                        .HasColumnType("int");

                    b.Property<int?>("HomeRuns")
                        .HasColumnType("int");

                    b.Property<int?>("IntentionalWalks")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelOfPlayoffs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Runs")
                        .HasColumnType("int");

                    b.Property<int?>("RunsBattedIn")
                        .HasColumnType("int");

                    b.Property<int?>("SacrificeFlies")
                        .HasColumnType("int");

                    b.Property<int?>("Sacrifices")
                        .HasColumnType("int");

                    b.Property<int?>("StolenBases")
                        .HasColumnType("int");

                    b.Property<int?>("Strikeouts")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Triples")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BattingPost");
                });

            modelBuilder.Entity("Chadwick.Database.Models.ChadwickFields", b =>
                {
                    b.Property<int>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbbreviatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CamelCaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChadwickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("FieldId");

                    b.HasIndex("TableId");

                    b.ToTable("ChadwickFields");
                });

            modelBuilder.Entity("Chadwick.Database.Models.ChadwickTables", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TableId");

                    b.ToTable("ChadwickTables");
                });

            modelBuilder.Entity("Chadwick.Database.Models.ChadwickUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Chadwick.Database.Models.CollegePlaying", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CollegePlaying");
                });

            modelBuilder.Entity("Chadwick.Database.Models.CommitProcessorJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommitHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompletedCount")
                        .HasColumnType("int");

                    b.Property<int>("FailCount")
                        .HasColumnType("int");

                    b.Property<int>("FilesToProcessCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Started")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommitProcessorJobs");
                });

            modelBuilder.Entity("Chadwick.Database.Models.CsvProcessorJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CommitJobId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Started")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommitJobId");

                    b.ToTable("CsvProcessorJobs");
                });

            modelBuilder.Entity("Chadwick.Database.Models.Fielding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Assists")
                        .HasColumnType("int");

                    b.Property<int?>("CaughtStealing")
                        .HasColumnType("int");

                    b.Property<int?>("DoublePlays")
                        .HasColumnType("int");

                    b.Property<int?>("Errors")
                        .HasColumnType("int");

                    b.Property<int?>("GameStarts")
                        .HasColumnType("int");

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PassedBalls")
                        .HasColumnType("int");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Putouts")
                        .HasColumnType("int");

                    b.Property<int?>("Stint")
                        .HasColumnType("int");

                    b.Property<int?>("StolenBases")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimePlayedInFieldExpressedAsOuts")
                        .HasColumnType("int");

                    b.Property<int?>("WildPitches")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneRating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Fielding");
                });

            modelBuilder.Entity("Chadwick.Database.Models.FieldingOF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GamesPlayedInCenterField")
                        .HasColumnType("int");

                    b.Property<int?>("GamesPlayedInLeftField")
                        .HasColumnType("int");

                    b.Property<int?>("GamesPlayedInRightField")
                        .HasColumnType("int");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stint")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FieldingOF");
                });

            modelBuilder.Entity("Chadwick.Database.Models.FieldingOFSplit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GameStarts")
                        .HasColumnType("int");

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stint")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FieldingOFSplit");
                });

            modelBuilder.Entity("Chadwick.Database.Models.FieldingPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Assists")
                        .HasColumnType("int");

                    b.Property<int?>("CaughtStealing")
                        .HasColumnType("int");

                    b.Property<int?>("DoublePlays")
                        .HasColumnType("int");

                    b.Property<int?>("Errors")
                        .HasColumnType("int");

                    b.Property<int?>("GameStarts")
                        .HasColumnType("int");

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelOfPlayoffs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PassedBalls")
                        .HasColumnType("int");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Putouts")
                        .HasColumnType("int");

                    b.Property<int?>("StolenBases")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimePlayedInFieldExpressedAsOuts")
                        .HasColumnType("int");

                    b.Property<int?>("TriplePlays")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FieldingPost");
                });

            modelBuilder.Entity("Chadwick.Database.Models.HallOfFame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inducted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeededNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalBallotsCast")
                        .HasColumnType("int");

                    b.Property<int?>("TotalVotesReceived")
                        .HasColumnType("int");

                    b.Property<string>("VotedByMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VotesNeeded")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HallOfFame");
                });

            modelBuilder.Entity("Chadwick.Database.Models.HomeGames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Attendance")
                        .HasColumnType("int");

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<string>("LeagueKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Openings")
                        .HasColumnType("int");

                    b.Property<string>("ParkKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SpanFirst")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SpanLast")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeamKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HomeGames");
                });

            modelBuilder.Entity("Chadwick.Database.Models.Managers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Losses")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerialOrder")
                        .HasColumnType("int");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Wins")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("Chadwick.Database.Models.ManagersHalf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<int?>("Half")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Losses")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerialOrder")
                        .HasColumnType("int");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Wins")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ManagersHalf");
                });

            modelBuilder.Entity("Chadwick.Database.Models.Parks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("Chadwick.Database.Models.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseballReferenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bats")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BirthDay")
                        .HasColumnType("int");

                    b.Property<int?>("BirthMonth")
                        .HasColumnType("int");

                    b.Property<string>("BirthState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BirthYear")
                        .HasColumnType("int");

                    b.Property<string>("DeathCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeathCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeathDay")
                        .HasColumnType("int");

                    b.Property<int?>("DeathMonth")
                        .HasColumnType("int");

                    b.Property<string>("DeathState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeathYear")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Debut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinalGame")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("NameFirst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameGiven")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameLast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetrosheetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Throws")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Chadwick.Database.Models.Pitching", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Balks")
                        .HasColumnType("int");

                    b.Property<int?>("BattersFaced")
                        .HasColumnType("int");

                    b.Property<int?>("BattersHitByPitch")
                        .HasColumnType("int");

                    b.Property<int?>("CompleteGames")
                        .HasColumnType("int");

                    b.Property<decimal?>("EarnedRunAverage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EarnedRuns")
                        .HasColumnType("int");

                    b.Property<int?>("GameStarts")
                        .HasColumnType("int");

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<int?>("GamesFinished")
                        .HasColumnType("int");

                    b.Property<int?>("GroundedIntoDoublePlays")
                        .HasColumnType("int");

                    b.Property<int?>("Hits")
                        .HasColumnType("int");

                    b.Property<int?>("HomeRuns")
                        .HasColumnType("int");

                    b.Property<int?>("IntentionalWalks")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Losses")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpponentBattingAverage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OutsPitched")
                        .HasColumnType("int");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RunsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("SacrificeFliesAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("SacrificeHitsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("Saves")
                        .HasColumnType("int");

                    b.Property<int?>("Shutouts")
                        .HasColumnType("int");

                    b.Property<int>("Stint")
                        .HasColumnType("int");

                    b.Property<int?>("Strikeouts")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Walks")
                        .HasColumnType("int");

                    b.Property<int?>("WildPitches")
                        .HasColumnType("int");

                    b.Property<int?>("Wins")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pitching");
                });

            modelBuilder.Entity("Chadwick.Database.Models.PitchingPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Balks")
                        .HasColumnType("int");

                    b.Property<int?>("BattersFaced")
                        .HasColumnType("int");

                    b.Property<int?>("BattersHitByPitch")
                        .HasColumnType("int");

                    b.Property<int?>("CompleteGames")
                        .HasColumnType("int");

                    b.Property<int?>("EarnedRuns")
                        .HasColumnType("int");

                    b.Property<string>("EarnedRunsAverage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameStarts")
                        .HasColumnType("int");

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<int?>("GamesFinished")
                        .HasColumnType("int");

                    b.Property<int?>("GroundedIntoDoublePlays")
                        .HasColumnType("int");

                    b.Property<int?>("Hits")
                        .HasColumnType("int");

                    b.Property<int?>("HomeRuns")
                        .HasColumnType("int");

                    b.Property<int?>("IntentionalWalks")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelOfPlayoffs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Losses")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpponentBattingAverage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OutsPitched")
                        .HasColumnType("int");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RunsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("SacrificeFliesAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("SacrificeHitsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("Saves")
                        .HasColumnType("int");

                    b.Property<int?>("Shutouts")
                        .HasColumnType("int");

                    b.Property<int?>("Strikeouts")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Walks")
                        .HasColumnType("int");

                    b.Property<int?>("WildPitches")
                        .HasColumnType("int");

                    b.Property<int?>("Wins")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PitchingPost");
                });

            modelBuilder.Entity("Chadwick.Database.Models.Salaries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Chadwick.Database.Models.Schools", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("Chadwick.Database.Models.SearchIndexProcessorJobs", b =>
                {
                    b.Property<int>("IndexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DocumentsProcessed")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("datetime2");

                    b.Property<string>("IndexName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Started")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StorageSize")
                        .HasColumnType("bigint");

                    b.HasKey("IndexId");

                    b.ToTable("SearchIndexProcessorJobs");
                });

            modelBuilder.Entity("Chadwick.Database.Models.SeriesPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LevelOfPlayoffs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoserLeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoserTeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Losses")
                        .HasColumnType("int");

                    b.Property<int?>("Ties")
                        .HasColumnType("int");

                    b.Property<string>("WinningLeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WinningTeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Wins")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SeriesPost");
                });

            modelBuilder.Entity("Chadwick.Database.Models.Teams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AtBats")
                        .HasColumnType("int");

                    b.Property<int?>("Attendance")
                        .HasColumnType("int");

                    b.Property<string>("Ballpark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseballReferenceTeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CaughtStealing")
                        .HasColumnType("int");

                    b.Property<int?>("CompleteGames")
                        .HasColumnType("int");

                    b.Property<string>("DivisionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionWin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoublePlays")
                        .HasColumnType("int");

                    b.Property<int?>("Doubles")
                        .HasColumnType("int");

                    b.Property<int?>("EarnedRunsAllowed")
                        .HasColumnType("int");

                    b.Property<string>("EarnedRunsAverage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Errors")
                        .HasColumnType("int");

                    b.Property<decimal?>("FieldingPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FranchiseId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<int?>("HitByPitch")
                        .HasColumnType("int");

                    b.Property<int?>("Hits")
                        .HasColumnType("int");

                    b.Property<int?>("HitsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("HomeGames")
                        .HasColumnType("int");

                    b.Property<int?>("HomeRuns")
                        .HasColumnType("int");

                    b.Property<int?>("HomeRunsAllowed")
                        .HasColumnType("int");

                    b.Property<string>("LahmanTeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeagueWin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Losses")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OutsPitched")
                        .HasColumnType("int");

                    b.Property<int?>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("RetrosheetTeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Runs")
                        .HasColumnType("int");

                    b.Property<int?>("RunsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("SacrificeFlies")
                        .HasColumnType("int");

                    b.Property<int?>("Saves")
                        .HasColumnType("int");

                    b.Property<int?>("Shutouts")
                        .HasColumnType("int");

                    b.Property<int?>("StolenBases")
                        .HasColumnType("int");

                    b.Property<int?>("Strikeouts")
                        .HasColumnType("int");

                    b.Property<int?>("StrikeoutsByPitchers")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThreeYearParkFactorForBatters")
                        .HasColumnType("int");

                    b.Property<int?>("ThreeYearParkFactorForPitchers")
                        .HasColumnType("int");

                    b.Property<int?>("Triples")
                        .HasColumnType("int");

                    b.Property<int?>("Walks")
                        .HasColumnType("int");

                    b.Property<int?>("WalksAllowed")
                        .HasColumnType("int");

                    b.Property<string>("WildCardWinner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Wins")
                        .HasColumnType("int");

                    b.Property<string>("WorldSeriesWin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Chadwick.Database.Models.TeamsFranchises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FranchiseId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalAssociationFranchiseId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TeamsFranchises");
                });

            modelBuilder.Entity("Chadwick.Database.Models.TeamsHalf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DivisionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionWin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<int?>("Half")
                        .HasColumnType("int");

                    b.Property<string>("LeagueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Losses")
                        .HasColumnType("int");

                    b.Property<int?>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Wins")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TeamsHalf");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Chadwick.Database.Models.ChadwickFields", b =>
                {
                    b.HasOne("Chadwick.Database.Models.ChadwickTables", "Table")
                        .WithMany("Fields")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Chadwick.Database.Models.CsvProcessorJob", b =>
                {
                    b.HasOne("Chadwick.Database.Models.CommitProcessorJob", "CommitJob")
                        .WithMany()
                        .HasForeignKey("CommitJobId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Chadwick.Database.Models.ChadwickUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Chadwick.Database.Models.ChadwickUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chadwick.Database.Models.ChadwickUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Chadwick.Database.Models.ChadwickUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
